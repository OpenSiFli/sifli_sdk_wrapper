name: Build and Release

on:
  push:
    branches:
      - master
    tags: ['*']  # Trigger on any tag
  pull_request:

permissions:
  contents: write

jobs:
  build:
    name: Build and Upload Release Artifacts
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Project
        run: cargo build --release

      - name: Rename Executable
        run: |
          if (Test-Path "target\release\sdk_py.exe") {
            Push-Location "target\release"
            Rename-Item "sdk_py.exe" "sdk.py.exe" -Force
            Pop-Location
          } else {
            Write-Error "Executable not found!"
          }
        shell: pwsh

      - name: Create Zip Archive and Generate SHA256 Checksum
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Use the tag string directly as the version
          $version = $env:GITHUB_REF_NAME
          Write-Host "Tag version: $version"
          Compress-Archive -Path "target\release\sdk.py.exe" -DestinationPath "sdk-py-v$version.zip"
          $hash = Get-FileHash -Algorithm SHA256 -Path "sdk-py-v$version.zip" | Select-Object -ExpandProperty Hash
          $hash | Out-File -Encoding ASCII "sdk-py-v$version.zip.sha256"
        shell: pwsh
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

      - name: Upload Release Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            sdk-py-v*.zip
            sdk-py-v*.zip.sha256

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: .
      
      - name: Set Version
        id: set_version
        run: |
          # Directly use the tag string as the version
          echo "version=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "::set-output name=version::${GITHUB_REF_NAME}"
        shell: bash
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

      - name: Create Release and Upload Assets
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "Automated release of sdk.py."
          artifacts: |
            sdk-py-v${{ steps.set_version.outputs.version }}.zip
            sdk-py-v${{ steps.set_version.outputs.version }}.zip.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}